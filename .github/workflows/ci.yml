name: CI

on:
  push:
    branches:
      - '**'
      - '!master'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Install Python/Pip
        run: |
          sudo apt-get install python python-pip
          sudo pip install virtualenv

      - name: Mount Cache
        uses: actions/cache@v1
        with:
          path: "/home/runner/.cache/bazel"
          key: bazel

      - name: Install grcov
        run: |
          curl -sLO "https://github.com/mozilla/grcov/releases/download/v0.5.15/grcov-linux-x86_64.tar.bz2"
          bunzip2 grcov-linux-x86_64.tar.bz2
          tar -xvf grcov-linux-x86_64.tar
          mkdir -p "${GITHUB_WORKSPACE}/bin/"
          mv grcov "${GITHUB_WORKSPACE}/bin/grcov"
          chmod +x "${GITHUB_WORKSPACE}/bin/grcov"

      - name: "Build & Test"
        run: |
          curl -L https://github.com/ulfjack/coveragepy/archive/lcov-support.tar.gz | tar xz
          make test CI=yes COVERAGE=yes VERBOSE=yes
          cp "dist/Python/bazel-out/_coverage/_coverage_report.dat" coverage.py.info
        env:
          CC: clang-9

      - name: codecov
        if: always()
        run: |
          set -x
          "${GITHUB_WORKSPACE}/bin/grcov" coverage.py.info -t lcov \
            --ignore "external/*" --ignore "/usr/*" \
            --ignore "*deps_*" --ignore "*_pb2.py" \
            --llvm > lcov.py.info
          file lcov.py.info
          sed -i 's/SF:.*test\.runfiles\/ocpy\/pytests/SF:ocpy\/pytests/g' coverage.py.info
          sed -i 's/SF:.*test\.runfiles\/ocpy\/pytests/SF:ocpy\/pytests/g' lcov.py.info
          bash -x <(curl -s https://codecov.io/bash) -Z -v -f ./lcov.py.info -F python_tests
        env:
          CC: clang-9
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: archive
          path: "${GITHUB_WORKSPACE}/dist/bin/opencannabis/ocp-lib-archive.tar"

      - name: Upload Reports
        uses: actions/upload-artifact@v2
        with:
          name: reports
          path: |
            lcov.py.info
            coverage.py.info
            !path/**/*.tmp


#"${GITHUB_WORKSPACE}/.env/bin/bazelisk" coverage -t- --instrument_test_targets --experimental_cc_coverage \
#    --test_output=all --linkopt=--coverage --linkopt=-lc --combined_report=lcov \
#    --test_env="PYTHON_COVERAGE=${GITHUB_WORKSPACE}/coveragepy-lcov-support/__main__.py" \
#    --define=config_file=test //pytests:tests
